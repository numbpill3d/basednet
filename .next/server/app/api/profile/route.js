"use strict";(()=>{var e={};e.id=442,e.ids=[442],e.modules={2934:e=>{e.exports=require("next/dist/client/components/action-async-storage.external.js")},4580:e=>{e.exports=require("next/dist/client/components/request-async-storage.external.js")},5869:e=>{e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},9491:e=>{e.exports=require("assert")},8709:e=>{e.exports=require("buffer")},6113:e=>{e.exports=require("crypto")},2361:e=>{e.exports=require("events")},3685:e=>{e.exports=require("http")},5687:e=>{e.exports=require("https")},3477:e=>{e.exports=require("querystring")},7310:e=>{e.exports=require("url")},3837:e=>{e.exports=require("util")},9796:e=>{e.exports=require("zlib")},1690:(e,r,t)=>{t.r(r),t.d(r,{headerHooks:()=>f,originalPathname:()=>h,patchFetch:()=>R,requestAsyncStorage:()=>E,routeModule:()=>p,serverHooks:()=>T,staticGenerationAsyncStorage:()=>m,staticGenerationBailout:()=>y});var s={};t.r(s),t.d(s,{GET:()=>c,PUT:()=>d});var a=t(5419),i=t(9108),n=t(9678),o=t(8070),u=t(2002),l=t(5566);async function c(e){try{let e=await (0,u.ts)();if(!e)return o.Z.json({error:"Unauthorized"},{status:401});let r=await l.t.findByUserId(e.id);return o.Z.json({profile:r})}catch(e){return console.error("Error fetching profile:",e),o.Z.json({error:"Failed to fetch profile"},{status:500})}}async function d(e){try{let r=await (0,u.ts)();if(!r)return o.Z.json({error:"Unauthorized"},{status:401});let t=await e.json(),s=await l.t.update(r.id,t);if(!s)return o.Z.json({error:"Profile not found"},{status:404});return o.Z.json({profile:s})}catch(e){return console.error("Error updating profile:",e),o.Z.json({error:"Failed to update profile"},{status:500})}}let p=new a.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/profile/route",pathname:"/api/profile",filename:"route",bundlePath:"app/api/profile/route"},resolvedPagePath:"C:\\Users\\adoni\\Desktop\\projects\\basednet\\src\\app\\api\\profile\\route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:E,staticGenerationAsyncStorage:m,serverHooks:T,headerHooks:f,staticGenerationBailout:y}=p,h="/api/profile/route";function R(){return(0,n.patchFetch)({serverHooks:T,staticGenerationAsyncStorage:m})}},9470:(e,r,t)=>{t.r(r),t.d(r,{GET:()=>i,POST:()=>i,authOptions:()=>a});var s=t(9605);!function(){var e=Error("Cannot find module '@/lib/db'");throw e.code="MODULE_NOT_FOUND",e}();let a={providers:[{id:"indieauth",name:"IndieAuth",type:"oauth",authorization:{url:"https://indieauth.com/auth",params:{scope:"profile email"}},token:{url:"https://tokens.indieauth.com/token"},userinfo:{url:"https://indieauth.com/userinfo",request:async({tokens:e,client:r})=>({id:e.me,name:e.name||e.me,email:e.email,image:e.photo})},profile:e=>({id:e.id,name:e.name,email:e.email,image:e.image}),clientId:process.env.INDIE_AUTH_CLIENT_ID,clientSecret:process.env.INDIE_AUTH_CLIENT_SECRET}],callbacks:{async signIn({user:e,account:r,profile:t}){try{return await Object(function(){var e=Error("Cannot find module '@/lib/db'");throw e.code="MODULE_NOT_FOUND",e}())(async e=>{let r=await e.query("SELECT * FROM users WHERE auth_domain = $1",[t.id]);0===r.rows.length&&(await e.query("INSERT INTO users (username, auth_domain, email) VALUES ($1, $2, $3)",[t.name,t.id,t.email]),await e.query("INSERT INTO profiles (user_id) VALUES (currval('users_id_seq'))"))}),!0}catch(e){return console.error("Error during sign in:",e),!1}},async session({session:e,user:r}){try{return await Object(function(){var e=Error("Cannot find module '@/lib/db'");throw e.code="MODULE_NOT_FOUND",e}())(async r=>{let t=await r.query("SELECT * FROM users WHERE email = $1",[e.user?.email]);return t.rows[0]?{...e,user:{...e.user,id:t.rows[0].id,username:t.rows[0].username}}:e})}catch(r){return console.error("Error getting session:",r),e}}},pages:{signIn:"/auth/signin",error:"/auth/error"},debug:!1},i=(0,s.ZP)(a)},9537:(e,r,t)=>{t.d(r,{Z:()=>s});let s=new(require("pg")).Pool({user:process.env.POSTGRES_USER,password:process.env.POSTGRES_PASSWORD,host:process.env.POSTGRES_HOST,port:parseInt(process.env.POSTGRES_PORT||"5432"),database:process.env.POSTGRES_DB,ssl:{rejectUnauthorized:!1}})},5566:(e,r,t)=>{t.d(r,{t:()=>a});var s=t(9537);class a{static async create(e,r){let t=["user_id",...Object.keys(r)],a=[e,...Object.values(r)],i=t.map((e,r)=>`$${r+1}`).join(", "),n=`
      INSERT INTO profiles (${t.join(", ")})
      VALUES (${i})
      RETURNING *
    `;return(await s.Z.query(n,a)).rows[0]}static async findByUserId(e){return(await s.Z.query("SELECT * FROM profiles WHERE user_id = $1",[e])).rows[0]||null}static async update(e,r){let t=["display_name","bio","avatar_url","theme_preferences","custom_css","custom_html","social_links"],a=Object.keys(r).filter(e=>t.includes(e));if(0===a.length)return null;let i=a.map((e,r)=>`${e} = $${r+2}`).join(", "),n=a.map(e=>{let t=r[e];return["theme_preferences","social_links"].includes(e)?JSON.stringify(t):t}),o=`
      UPDATE profiles 
      SET ${i}, updated_at = CURRENT_TIMESTAMP 
      WHERE user_id = $1 
      RETURNING *
    `;return(await s.Z.query(o,[e,...n])).rows[0]||null}static async delete(e){return(await s.Z.query("DELETE FROM profiles WHERE user_id = $1 RETURNING id",[e])).rowCount>0}static async getTheme(e){let r=await s.Z.query("SELECT theme_preferences FROM profiles WHERE user_id = $1",[e]);return r.rows[0]?.theme_preferences||null}static async updateTheme(e,r){let t=`
      UPDATE profiles 
      SET theme_preferences = $2, updated_at = CURRENT_TIMESTAMP 
      WHERE user_id = $1
    `;return(await s.Z.query(t,[e,JSON.stringify(r)])).rowCount>0}}},4111:(e,r,t)=>{t.d(r,{T:()=>a});var s=t(9537);class a{static async create(e,r,t){let a=`
      INSERT INTO users (username, email, auth_domain)
      VALUES ($1, $2, $3)
      RETURNING *
    `;return(await s.Z.query(a,[e,r,t])).rows[0]}static async findById(e){return(await s.Z.query("SELECT * FROM users WHERE id = $1",[e])).rows[0]||null}static async findByUsername(e){return(await s.Z.query("SELECT * FROM users WHERE username = $1",[e])).rows[0]||null}static async update(e,r){let t=["username","email","auth_domain"],a=Object.keys(r).filter(e=>t.includes(e));if(0===a.length)return null;let i=a.map((e,r)=>`${e} = $${r+2}`).join(", "),n=a.map(e=>r[e]),o=`
      UPDATE users 
      SET ${i}, updated_at = CURRENT_TIMESTAMP 
      WHERE id = $1 
      RETURNING *
    `;return(await s.Z.query(o,[e,...n])).rows[0]||null}static async delete(e){return((await s.Z.query("DELETE FROM users WHERE id = $1 RETURNING id",[e])).rowCount??0)>0}static async list(e=10,r=0){return(await s.Z.query("SELECT * FROM users ORDER BY created_at DESC LIMIT $1 OFFSET $2",[e,r])).rows}}},2002:(e,r,t)=>{t.d(r,{Fs:()=>o,mk:()=>u,ts:()=>n});var s=t(9605),a=t(9470),i=t(4111);async function n(){let e=await (0,s.Z1)(a.authOptions);return e?.user?.id?await i.T.findById(e.user.id):null}async function o(e,r){return e===r}async function u(){let e=await (0,s.Z1)(a.authOptions);if(!e?.user?.id)throw Error("Authentication required");return e}t(5566)}};var r=require("../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[638,536,70],()=>t(1690));module.exports=s})();