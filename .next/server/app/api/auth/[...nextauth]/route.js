"use strict";(()=>{var e={};e.id=912,e.ids=[912],e.modules={2934:e=>{e.exports=require("next/dist/client/components/action-async-storage.external.js")},4580:e=>{e.exports=require("next/dist/client/components/request-async-storage.external.js")},5869:e=>{e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},5900:e=>{e.exports=require("pg")},9491:e=>{e.exports=require("assert")},8709:e=>{e.exports=require("buffer")},6113:e=>{e.exports=require("crypto")},2361:e=>{e.exports=require("events")},3685:e=>{e.exports=require("http")},5687:e=>{e.exports=require("https")},3477:e=>{e.exports=require("querystring")},7310:e=>{e.exports=require("url")},3837:e=>{e.exports=require("util")},9796:e=>{e.exports=require("zlib")},4962:(e,r,t)=>{t.r(r),t.d(r,{headerHooks:()=>h,originalPathname:()=>y,patchFetch:()=>g,requestAsyncStorage:()=>p,routeModule:()=>l,serverHooks:()=>x,staticGenerationAsyncStorage:()=>d,staticGenerationBailout:()=>m});var s={};t.r(s),t.d(s,{GET:()=>c,POST:()=>c});var a=t(5419),n=t(9108),o=t(9678),i=t(9605),u=t(874);let c=(0,i.ZP)(u.L),l=new a.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/auth/[...nextauth]/route",pathname:"/api/auth/[...nextauth]",filename:"route",bundlePath:"app/api/auth/[...nextauth]/route"},resolvedPagePath:"C:\\Users\\adoni\\Desktop\\projects\\basednet\\src\\app\\api\\auth\\[...nextauth]\\route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:p,staticGenerationAsyncStorage:d,serverHooks:x,headerHooks:h,staticGenerationBailout:m}=l,y="/api/auth/[...nextauth]/route";function g(){return(0,o.patchFetch)({serverHooks:x,staticGenerationAsyncStorage:d})}},874:(e,r,t)=>{t.d(r,{L:()=>o});var s=t(5900);if(!process.env.DATABASE_URL)throw Error("DATABASE_URL is not defined");let a=new s.Pool({connectionString:process.env.DATABASE_URL,max:20,idleTimeoutMillis:3e4,connectionTimeoutMillis:2e3});async function n(e){let r=await a.connect();try{await r.query("BEGIN");let t=await e(r);return await r.query("COMMIT"),t}catch(e){throw await r.query("ROLLBACK"),e}finally{r.release()}}a.query("SELECT NOW()",e=>{e?console.error("Database connection error:",e.message):console.log("Database connected successfully")}),process.on("SIGTERM",async()=>{console.log("Closing database pool"),await a.end()});let o={providers:[(0,t(6485).Z)({name:"IndieAuth",credentials:{username:{label:"Username",type:"text"},password:{label:"Password",type:"password"}},authorize:async e=>e?.username?{id:"1",name:e.username,email:`${e.username}@example.com`}:null})],callbacks:{async session({session:e,token:r}){try{if(e.user)return await n(async r=>{let t=await r.query("SELECT * FROM users WHERE email = $1",[e.user?.email]);return t.rows[0]?{...e,user:{...e.user,id:t.rows[0].id,username:t.rows[0].username}}:e});return e}catch(r){return console.error("Error getting session:",r),e}},jwt:async({token:e,user:r})=>(r&&(e.id=r.id),e)},pages:{signIn:"/auth/signin",error:"/auth/error"},debug:!1,session:{strategy:"jwt"}}}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[638,938],()=>t(4962));module.exports=s})();