{"version":3,"file":"../app/api/ipfs/[cid]/route.js","mappings":"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","sources":["webpack://basednet/external commonjs \"@sentry/nextjs\"","webpack://basednet/external commonjs \"next/dist/client/components/action-async-storage.external.js\"","webpack://basednet/external commonjs \"next/dist/client/components/request-async-storage.external.js\"","webpack://basednet/external commonjs \"next/dist/client/components/static-generation-async-storage.external.js\"","webpack://basednet/external commonjs \"next/dist/compiled/next-server/app-route.runtime.prod.js\"","webpack://basednet/external commonjs \"pg\"","webpack://basednet/external node-commonjs \"assert\"","webpack://basednet/external node-commonjs \"buffer\"","webpack://basednet/external node-commonjs \"crypto\"","webpack://basednet/external node-commonjs \"events\"","webpack://basednet/external node-commonjs \"http\"","webpack://basednet/external node-commonjs \"https\"","webpack://basednet/external node-commonjs \"querystring\"","webpack://basednet/external node-commonjs \"url\"","webpack://basednet/external node-commonjs \"util\"","webpack://basednet/external node-commonjs \"zlib\"","webpack://basednet/src/app/api/ipfs/[cid]/route.ts","webpack://basednet/sentry-wrapper-module","webpack://basednet/?f3d2","webpack://basednet/<anon>"],"sourcesContent":["module.exports = require(\"@sentry/nextjs\");","module.exports = require(\"next/dist/client/components/action-async-storage.external.js\");","module.exports = require(\"next/dist/client/components/request-async-storage.external.js\");","module.exports = require(\"next/dist/client/components/static-generation-async-storage.external.js\");","module.exports = require(\"next/dist/compiled/next-server/app-route.runtime.prod.js\");","module.exports = require(\"pg\");","module.exports = require(\"assert\");","module.exports = require(\"buffer\");","module.exports = require(\"crypto\");","module.exports = require(\"events\");","module.exports = require(\"http\");","module.exports = require(\"https\");","module.exports = require(\"querystring\");","module.exports = require(\"url\");","module.exports = require(\"util\");","module.exports = require(\"zlib\");","import { NextRequest, NextResponse } from 'next/server';\r\nimport { getCurrentUser, hasPermission } from '../../../../lib/auth';\r\nimport { IpfsContentModel } from '../../../../db/models/ipfs-content';\r\n\r\nexport async function GET(\r\n  req: NextRequest,\r\n  { params }: { params: { cid: string } }\r\n) {\r\n  try {\r\n    const { cid } = params;\r\n    const content = await IpfsContentModel.findByCid(cid);\r\n\r\n    if (!content) {\r\n      return NextResponse.json(\r\n        { error: 'Content not found' },\r\n        { status: 404 }\r\n      );\r\n    }\r\n\r\n    return NextResponse.json({ content });\r\n  } catch (error) {\r\n    console.error('Error fetching IPFS content:', error);\r\n    return NextResponse.json(\r\n      { error: 'Failed to fetch IPFS content' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\nexport async function PATCH(\r\n  req: NextRequest,\r\n  { params }: { params: { cid: string } }\r\n) {\r\n  try {\r\n    const user = await getCurrentUser();\r\n    if (!user) {\r\n      return NextResponse.json({ error: 'Unauthorized' }, { status: 401 });\r\n    }\r\n\r\n    const { cid } = params;\r\n    const data = await req.json();\r\n    const { pinned } = data;\r\n\r\n    if (pinned === undefined) {\r\n      return NextResponse.json(\r\n        { error: 'No valid update fields provided' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Check if content exists and belongs to user\r\n    const existingContent = await IpfsContentModel.findByCid(cid);\r\n    if (!existingContent) {\r\n      return NextResponse.json(\r\n        { error: 'Content not found' },\r\n        { status: 404 }\r\n      );\r\n    }\r\n\r\n    if (!(await hasPermission(user.id, existingContent.user_id))) {\r\n      return NextResponse.json(\r\n        { error: 'Forbidden' },\r\n        { status: 403 }\r\n      );\r\n    }\r\n\r\n    const content = await IpfsContentModel.setPinStatus(cid, pinned);\r\n    return NextResponse.json({ content });\r\n  } catch (error) {\r\n    console.error('Error updating IPFS content:', error);\r\n    return NextResponse.json(\r\n      { error: 'Failed to update IPFS content' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\nexport async function DELETE(\r\n  req: NextRequest,\r\n  { params }: { params: { cid: string } }\r\n) {\r\n  try {\r\n    const user = await getCurrentUser();\r\n    if (!user) {\r\n      return NextResponse.json({ error: 'Unauthorized' }, { status: 401 });\r\n    }\r\n\r\n    const { cid } = params;\r\n\r\n    // Check if content exists and belongs to user\r\n    const existingContent = await IpfsContentModel.findByCid(cid);\r\n    if (!existingContent) {\r\n      return NextResponse.json(\r\n        { error: 'Content not found' },\r\n        { status: 404 }\r\n      );\r\n    }\r\n\r\n    if (!(await hasPermission(user.id, existingContent.user_id))) {\r\n      return NextResponse.json(\r\n        { error: 'Forbidden' },\r\n        { status: 403 }\r\n      );\r\n    }\r\n\r\n    const success = await IpfsContentModel.delete(cid, user.id);\r\n    if (!success) {\r\n      return NextResponse.json(\r\n        { error: 'Failed to delete content' },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    return NextResponse.json({ success: true });\r\n  } catch (error) {\r\n    console.error('Error deleting IPFS content:', error);\r\n    return NextResponse.json(\r\n      { error: 'Failed to delete IPFS content' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n","import { _nullishCoalesce, _optionalChain } from '@sentry/utils';\nimport * as Sentry from '@sentry/nextjs';\nimport { requestAsyncStorage } from 'next/dist/client/components/request-async-storage.external.js';\nimport * as serverComponentModule from '__SENTRY_WRAPPING_TARGET_FILE__.cjs';\nexport * from '__SENTRY_WRAPPING_TARGET_FILE__.cjs';\nexport {} from '__SENTRY_WRAPPING_TARGET_FILE__.cjs';\n\nfunction wrapHandler(handler, method) {\n  // Running the instrumentation code during the build phase will mark any function as \"dynamic\" because we're accessing\n  // the Request object. We do not want to turn handlers dynamic so we skip instrumentation in the build phase.\n  if (process.env.NEXT_PHASE === 'phase-production-build') {\n    return handler;\n  }\n\n  if (typeof handler !== 'function') {\n    return handler;\n  }\n\n  return new Proxy(handler, {\n    apply: (originalFunction, thisArg, args) => {\n      let sentryTraceHeader = undefined;\n      let baggageHeader = undefined;\n      let headers = undefined;\n\n      // We try-catch here just in case the API around `requestAsyncStorage` changes unexpectedly since it is not public API\n      try {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        const requestAsyncStore = requestAsyncStorage.getStore() ;\n        sentryTraceHeader = _nullishCoalesce(_optionalChain([requestAsyncStore, 'optionalAccess', _ => _.headers, 'access', _2 => _2.get, 'call', _3 => _3('sentry-trace')]), () => ( undefined));\n        baggageHeader = _nullishCoalesce(_optionalChain([requestAsyncStore, 'optionalAccess', _4 => _4.headers, 'access', _5 => _5.get, 'call', _6 => _6('baggage')]), () => ( undefined));\n        headers = _optionalChain([requestAsyncStore, 'optionalAccess', _7 => _7.headers]);\n      } catch (e) {\n        /** empty */\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n      return Sentry.wrapRouteHandlerWithSentry(originalFunction , {\n        method,\n        parameterizedRoute: '/api/ipfs/[cid]',\n        sentryTraceHeader,\n        baggageHeader,\n        headers,\n      }).apply(thisArg, args);\n    },\n  });\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst GET = wrapHandler(serverComponentModule.GET , 'GET');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst POST = wrapHandler(serverComponentModule.POST , 'POST');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst PUT = wrapHandler(serverComponentModule.PUT , 'PUT');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst PATCH = wrapHandler(serverComponentModule.PATCH , 'PATCH');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst DELETE = wrapHandler(serverComponentModule.DELETE , 'DELETE');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst HEAD = wrapHandler(serverComponentModule.HEAD , 'HEAD');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst OPTIONS = wrapHandler(serverComponentModule.OPTIONS , 'OPTIONS');\n\nexport { DELETE, GET, HEAD, OPTIONS, PATCH, POST, PUT };\n","import { AppRouteRouteModule } from \"next/dist/server/future/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/server/future/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/server/lib/patch-fetch\";\nimport * as userland from \"C:\\\\Users\\\\adoni\\\\Desktop\\\\projects\\\\basednet\\\\src\\\\app\\\\api\\\\ipfs\\\\[cid]\\\\route.ts\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/ipfs/[cid]/route\",\n        pathname: \"/api/ipfs/[cid]\",\n        filename: \"route\",\n        bundlePath: \"app/api/ipfs/[cid]/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\adoni\\\\Desktop\\\\projects\\\\basednet\\\\src\\\\app\\\\api\\\\ipfs\\\\[cid]\\\\route.ts\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout } = routeModule;\nconst originalPathname = \"/api/ipfs/[cid]/route\";\nfunction patchFetch() {\n    return _patchFetch({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\nexport { routeModule, requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout, originalPathname, patchFetch,  };\n\n//# sourceMappingURL=app-route.js.map"],"names":["module","exports","require","PATCH","req","params","user","getCurrentUser","NextResponse","json","error","status","cid","pinned","undefined","existingContent","IpfsContentModel","findByCid","hasPermission","id","user_id","content","setPinStatus","console","DELETE","delete","success","wrapHandler","handler","method","process","env","NEXT_PHASE","Proxy","apply","originalFunction","thisArg","args","sentryTraceHeader","baggageHeader","headers","requestAsyncStore","request_async_storage_external_js_","requestAsyncStorage","getStore","_nullishCoalesce","h","_optionalChain","x","_","_2","get","_3","_4","_5","_6","_7","e","nextjs_","wrapRouteHandlerWithSentry","parameterizedRoute","GET","POST","serverComponentModule.POST","PUT","serverComponentModule.PUT","serverComponentModule.PATCH","serverComponentModule.DELETE","HEAD","serverComponentModule.HEAD","OPTIONS","serverComponentModule.OPTIONS","routeModule","module_compiled","AppRouteRouteModule","definition","kind","route_kind","APP_ROUTE","page","pathname","filename","bundlePath","resolvedPagePath","nextConfigOutput","userland","route_namespaceObject","staticGenerationAsyncStorage","serverHooks","headerHooks","staticGenerationBailout","originalPathname","patchFetch","patch_fetch"],"sourceRoot":""}