{"version":3,"file":"static/chunks/app/dashboard/page-69fe971d239f9928.js","mappings":"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","sources":["webpack://_N_E/?2d00","webpack://_N_E/./node_modules/next/dist/api/navigation.js","webpack://_N_E/./src/app/dashboard/page.tsx","webpack://_N_E/./src/components/Navigation.tsx","webpack://_N_E/./src/contexts/AuthContext.tsx","webpack://_N_E/./src/lib/api.ts","webpack://_N_E/<anon>"],"sourcesContent":["import(/* webpackMode: \"eager\" */ \"C:\\\\Users\\\\adoni\\\\Desktop\\\\projects\\\\basednet\\\\src\\\\app\\\\dashboard\\\\page.tsx\")","export * from \"../client/components/navigation\";\n\n//# sourceMappingURL=navigation.js.map","'use client';\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useRouter } from 'next/navigation';\r\nimport Navigation from '../../components/Navigation';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport { api } from '../../lib/api';\r\n\r\ninterface IpfsContent {\r\n  id: number;\r\n  user_id: number;\r\n  cid: string;\r\n  content_type?: string;\r\n  filename?: string;\r\n  size?: number;\r\n  pinned: boolean;\r\n  created_at: string;\r\n}\r\n\r\ninterface ContentStats {\r\n  total: number;\r\n  pinned: number;\r\n  totalSize: number;\r\n}\r\n\r\nexport default function DashboardPage() {\r\n  const router = useRouter();\r\n  const { isLoading: authLoading, isAuthenticated } = useAuth();\r\n  \r\n  const [content, setContent] = useState<IpfsContent[]>([]);\r\n  const [stats, setStats] = useState<ContentStats>({ total: 0, pinned: 0, totalSize: 0 });\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [newCid, setNewCid] = useState('');\r\n  const [newFilename, setNewFilename] = useState('');\r\n  const [newContentType, setNewContentType] = useState('');\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  // Redirect if not authenticated\r\n  useEffect(() => {\r\n    if (!authLoading && !isAuthenticated) {\r\n      router.push('/');\r\n    }\r\n  }, [authLoading, isAuthenticated, router]);\r\n\r\n  // Fetch IPFS content\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      fetchContent();\r\n    }\r\n  }, [isAuthenticated]);\r\n\r\n  const fetchContent = async () => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const response = await api.ipfs.getContent();\r\n      if (response.error) {\r\n        throw new Error(response.error);\r\n      }\r\n      \r\n      setContent(response.data?.content || []);\r\n      setStats(response.data?.stats || { total: 0, pinned: 0, totalSize: 0 });\r\n    } catch (err) {\r\n      console.error('Error fetching IPFS content:', err);\r\n      setError((err as Error).message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleAddContent = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!newCid) {\r\n      setError('CID is required');\r\n      return;\r\n    }\r\n\r\n    setIsSubmitting(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await api.ipfs.createContent({\r\n        cid: newCid,\r\n        filename: newFilename || undefined,\r\n        contentType: newContentType || undefined,\r\n      });\r\n\r\n      if (response.error) {\r\n        throw new Error(response.error);\r\n      }\r\n\r\n      // Reset form\r\n      setNewCid('');\r\n      setNewFilename('');\r\n      setNewContentType('');\r\n      \r\n      // Refresh content list\r\n      fetchContent();\r\n    } catch (err) {\r\n      setError((err as Error).message);\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const handleTogglePin = async (cid: string, currentPinned: boolean) => {\r\n    try {\r\n      const response = await api.ipfs.updatePinStatus(cid, !currentPinned);\r\n      if (response.error) {\r\n        throw new Error(response.error);\r\n      }\r\n      \r\n      // Update local state\r\n      setContent(prevContent => \r\n        prevContent.map(item => \r\n          item.cid === cid ? { ...item, pinned: !currentPinned } : item\r\n        )\r\n      );\r\n      \r\n      // Update stats\r\n      setStats(prevStats => ({\r\n        ...prevStats,\r\n        pinned: currentPinned \r\n          ? Math.max(0, prevStats.pinned - 1) \r\n          : prevStats.pinned + 1\r\n      }));\r\n    } catch (err) {\r\n      setError((err as Error).message);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (cid: string) => {\r\n    if (!confirm('Are you sure you want to delete this content?')) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await api.ipfs.deleteContent(cid);\r\n      if (response.error) {\r\n        throw new Error(response.error);\r\n      }\r\n      \r\n      // Refresh content list\r\n      fetchContent();\r\n    } catch (err) {\r\n      setError((err as Error).message);\r\n    }\r\n  };\r\n\r\n  const formatFileSize = (bytes?: number) => {\r\n    if (bytes === undefined) return 'Unknown';\r\n    if (bytes === 0) return '0 Bytes';\r\n    \r\n    const k = 1024;\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n    \r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n  };\r\n\r\n  if (authLoading) {\r\n    return (\r\n      <div className=\"win98-desktop\">\r\n        <Navigation />\r\n        <div className=\"window\" style={{ maxWidth: '600px', margin: '20px auto' }}>\r\n          <div className=\"window-title\">\r\n            <span>Loading...</span>\r\n          </div>\r\n          <div className=\"window-content\" style={{ textAlign: 'center', padding: '20px' }}>\r\n            <div className=\"loading-98\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!isAuthenticated) {\r\n    return null; // Will redirect in useEffect\r\n  }\r\n\r\n  return (\r\n    <div className=\"win98-desktop\">\r\n      <Navigation />\r\n      \r\n      <div className=\"window\" style={{ maxWidth: '900px', margin: '20px auto' }}>\r\n        <div className=\"window-title\">\r\n          <span>IPFS Content Dashboard</span>\r\n          <span>×</span>\r\n        </div>\r\n        <div className=\"window-content\">\r\n          {error && (\r\n            <div style={{ \r\n              backgroundColor: '#ffdddd', \r\n              border: '1px solid #ff0000', \r\n              padding: '10px', \r\n              marginBottom: '15px' \r\n            }}>\r\n              Error: {error}\r\n            </div>\r\n          )}\r\n\r\n          <div style={{ display: 'flex', marginBottom: '20px' }}>\r\n            <div style={{ flex: 1, padding: '10px', border: '1px solid #c0c0c0' }}>\r\n              <h3 style={{ margin: '0 0 10px 0' }}>Content Stats</h3>\r\n              <table style={{ width: '100%' }}>\r\n                <tbody>\r\n                  <tr>\r\n                    <td>Total Files:</td>\r\n                    <td>{stats.total}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Pinned Files:</td>\r\n                    <td>{stats.pinned}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Total Size:</td>\r\n                    <td>{formatFileSize(stats.totalSize)}</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            \r\n            <div style={{ flex: 1, padding: '10px', border: '1px solid #c0c0c0', marginLeft: '10px' }}>\r\n              <h3 style={{ margin: '0 0 10px 0' }}>Add New Content</h3>\r\n              <form onSubmit={handleAddContent}>\r\n                <div style={{ marginBottom: '10px' }}>\r\n                  <label htmlFor=\"cid\" style={{ display: 'block', marginBottom: '5px' }}>\r\n                    CID:\r\n                  </label>\r\n                  <input \r\n                    id=\"cid\"\r\n                    type=\"text\" \r\n                    value={newCid} \r\n                    onChange={(e) => setNewCid(e.target.value)} \r\n                    className=\"input-98\"\r\n                    style={{ width: '100%' }}\r\n                    placeholder=\"Qm...\"\r\n                    required\r\n                  />\r\n                </div>\r\n                \r\n                <div style={{ marginBottom: '10px' }}>\r\n                  <label htmlFor=\"filename\" style={{ display: 'block', marginBottom: '5px' }}>\r\n                    Filename (optional):\r\n                  </label>\r\n                  <input \r\n                    id=\"filename\"\r\n                    type=\"text\" \r\n                    value={newFilename} \r\n                    onChange={(e) => setNewFilename(e.target.value)} \r\n                    className=\"input-98\"\r\n                    style={{ width: '100%' }}\r\n                    placeholder=\"example.jpg\"\r\n                  />\r\n                </div>\r\n                \r\n                <div style={{ marginBottom: '10px' }}>\r\n                  <label htmlFor=\"contentType\" style={{ display: 'block', marginBottom: '5px' }}>\r\n                    Content Type (optional):\r\n                  </label>\r\n                  <input \r\n                    id=\"contentType\"\r\n                    type=\"text\" \r\n                    value={newContentType} \r\n                    onChange={(e) => setNewContentType(e.target.value)} \r\n                    className=\"input-98\"\r\n                    style={{ width: '100%' }}\r\n                    placeholder=\"image/jpeg\"\r\n                  />\r\n                </div>\r\n                \r\n                <button \r\n                  type=\"submit\" \r\n                  className=\"btn-98\" \r\n                  disabled={isSubmitting}\r\n                >\r\n                  {isSubmitting ? 'Adding...' : 'Add Content'}\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n\r\n          <h3>Your IPFS Content</h3>\r\n          \r\n          {isLoading ? (\r\n            <div style={{ textAlign: 'center', padding: '20px' }}>\r\n              <div className=\"loading-98\"></div>\r\n            </div>\r\n          ) : content.length === 0 ? (\r\n            <p>You don't have any IPFS content yet. Add some using the form above.</p>\r\n          ) : (\r\n            <table style={{ width: '100%', borderCollapse: 'collapse' }}>\r\n              <thead>\r\n                <tr style={{ backgroundColor: '#c0c0c0' }}>\r\n                  <th style={{ padding: '8px', textAlign: 'left' }}>Filename</th>\r\n                  <th style={{ padding: '8px', textAlign: 'left' }}>CID</th>\r\n                  <th style={{ padding: '8px', textAlign: 'left' }}>Type</th>\r\n                  <th style={{ padding: '8px', textAlign: 'right' }}>Size</th>\r\n                  <th style={{ padding: '8px', textAlign: 'center' }}>Pinned</th>\r\n                  <th style={{ padding: '8px', textAlign: 'center' }}>Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {content.map((item) => (\r\n                  <tr key={item.id} style={{ borderBottom: '1px solid #c0c0c0' }}>\r\n                    <td style={{ padding: '8px' }}>{item.filename || 'Unnamed'}</td>\r\n                    <td style={{ padding: '8px' }}>\r\n                      <a \r\n                        href={`https://ipfs.io/ipfs/${item.cid}`} \r\n                        target=\"_blank\" \r\n                        rel=\"noopener noreferrer\"\r\n                      >\r\n                        {item.cid.substring(0, 10)}...\r\n                      </a>\r\n                    </td>\r\n                    <td style={{ padding: '8px' }}>{item.content_type || 'Unknown'}</td>\r\n                    <td style={{ padding: '8px', textAlign: 'right' }}>{formatFileSize(item.size)}</td>\r\n                    <td style={{ padding: '8px', textAlign: 'center' }}>\r\n                      <input \r\n                        type=\"checkbox\" \r\n                        checked={item.pinned} \r\n                        onChange={() => handleTogglePin(item.cid, item.pinned)}\r\n                        aria-label={`Pin ${item.filename || 'content'}`}\r\n                      />\r\n                    </td>\r\n                    <td style={{ padding: '8px', textAlign: 'center' }}>\r\n                      <button \r\n                        className=\"btn-98 btn-small\" \r\n                        onClick={() => handleDelete(item.cid)}\r\n                        aria-label={`Delete ${item.filename || 'content'}`}\r\n                      >\r\n                        Delete\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","'use client';\r\n\r\nimport React from 'react';\r\nimport Link from 'next/link';\r\nimport { useAuth } from '@/contexts/AuthContext';\r\n\r\nexport default function Navigation() {\r\n  const { user, isAuthenticated, isLoading, login, logout } = useAuth();\r\n\r\n  return (\r\n    <nav className=\"navbar-98\">\r\n      <button className=\"btn-98\">Start</button>\r\n      <div style={{ marginLeft: '10px' }}>|</div>\r\n      <Link href=\"/\" className=\"btn-98\">Home</Link>\r\n      <Link href=\"/browse\" className=\"btn-98\">Browse</Link>\r\n      <Link href=\"/webrings\" className=\"btn-98\">Webrings</Link>\r\n      \r\n      {isLoading ? (\r\n        <div className=\"loading-98\" style={{ marginLeft: 'auto' }}></div>\r\n      ) : isAuthenticated ? (\r\n        <>\r\n          <Link href=\"/dashboard\" className=\"btn-98\">My Dashboard</Link>\r\n          <Link href=\"/profile\" className=\"btn-98\">Profile</Link>\r\n          <button \r\n            className=\"btn-98\" \r\n            style={{ marginLeft: 'auto' }}\r\n            onClick={() => logout()}\r\n          >\r\n            Logout ({user?.username})\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <button \r\n          className=\"btn-98\" \r\n          style={{ marginLeft: 'auto' }}\r\n          onClick={() => login()}\r\n        >\r\n          Login\r\n        </button>\r\n      )}\r\n      \r\n      <Link href=\"/help\" className=\"btn-98\">Help</Link>\r\n    </nav>\r\n  );\r\n}\r\n","'use client';\r\n\r\nimport React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\nimport { useSession, signIn, signOut } from 'next-auth/react';\r\nimport { api } from '@/lib/api';\r\n\r\n// Define types for our context\r\ninterface User {\r\n  id: number;\r\n  username: string;\r\n  email?: string;\r\n  created_at: string;\r\n  updated_at: string;\r\n}\r\n\r\ninterface Profile {\r\n  id: number;\r\n  user_id: number;\r\n  display_name?: string;\r\n  bio?: string;\r\n  avatar_url?: string;\r\n  theme_preferences?: Record<string, any>;\r\n  custom_css?: string;\r\n  custom_html?: string;\r\n  social_links?: Record<string, string>;\r\n  created_at: string;\r\n  updated_at: string;\r\n}\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  profile: Profile | null;\r\n  isLoading: boolean;\r\n  isAuthenticated: boolean;\r\n  error: string | null;\r\n  login: () => Promise<void>;\r\n  logout: () => Promise<void>;\r\n  refreshUserData: () => Promise<void>;\r\n}\r\n\r\n// Create the context\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\n// Provider component\r\nexport function AuthProvider({ children }: { children: ReactNode }) {\r\n  const { data: session, status } = useSession();\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [profile, setProfile] = useState<Profile | null>(null);\r\n  const [isLoading, setIsLoading] = useState<boolean>(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  // Function to fetch user data\r\n  const fetchUserData = async () => {\r\n    if (!session?.user) {\r\n      setUser(null);\r\n      setProfile(null);\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setIsLoading(true);\r\n      setError(null);\r\n\r\n      // Fetch user data\r\n      const userResponse = await api.user.getCurrentUser();\r\n      if (userResponse.error) {\r\n        throw new Error(userResponse.error);\r\n      }\r\n      setUser(userResponse.data?.user || null);\r\n\r\n      // Fetch profile data\r\n      const profileResponse = await api.profile.getProfile();\r\n      if (profileResponse.error) {\r\n        throw new Error(profileResponse.error);\r\n      }\r\n      setProfile(profileResponse.data?.profile || null);\r\n    } catch (err) {\r\n      console.error('Error fetching user data:', err);\r\n      setError((err as Error).message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Fetch user data when session changes\r\n  useEffect(() => {\r\n    if (status === 'loading') {\r\n      return;\r\n    }\r\n    \r\n    fetchUserData();\r\n  }, [session, status]);\r\n\r\n  // Login function\r\n  const login = async () => {\r\n    try {\r\n      await signIn('indieauth', { callbackUrl: '/' });\r\n    } catch (err) {\r\n      console.error('Login error:', err);\r\n      setError((err as Error).message);\r\n    }\r\n  };\r\n\r\n  // Logout function\r\n  const logout = async () => {\r\n    try {\r\n      await signOut({ callbackUrl: '/' });\r\n      setUser(null);\r\n      setProfile(null);\r\n    } catch (err) {\r\n      console.error('Logout error:', err);\r\n      setError((err as Error).message);\r\n    }\r\n  };\r\n\r\n  // Function to manually refresh user data\r\n  const refreshUserData = async () => {\r\n    await fetchUserData();\r\n  };\r\n\r\n  // Context value\r\n  const value = {\r\n    user,\r\n    profile,\r\n    isLoading,\r\n    isAuthenticated: !!user,\r\n    error,\r\n    login,\r\n    logout,\r\n    refreshUserData,\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n}\r\n\r\n// Custom hook to use the auth context\r\nexport function useAuth() {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n}\r\n","/**\r\n * API client utility for making requests to the backend\r\n */\r\n\r\n// Define types for API responses\r\nexport interface ApiResponse<T> {\r\n  data?: T;\r\n  error?: string;\r\n}\r\n\r\n// Define types for pagination\r\nexport interface PaginationParams {\r\n  limit?: number;\r\n  offset?: number;\r\n}\r\n\r\n// Define error class for API errors\r\nexport class ApiError extends Error {\r\n  status: number;\r\n  \r\n  constructor(message: string, status: number) {\r\n    super(message);\r\n    this.status = status;\r\n    this.name = 'ApiError';\r\n  }\r\n}\r\n\r\n/**\r\n * Base fetch function with error handling\r\n */\r\nasync function fetchApi<T>(\r\n  url: string,\r\n  options: RequestInit = {}\r\n): Promise<ApiResponse<T>> {\r\n  try {\r\n    const response = await fetch(url, {\r\n      ...options,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        ...options.headers,\r\n      },\r\n    });\r\n\r\n    const data = await response.json();\r\n\r\n    if (!response.ok) {\r\n      throw new ApiError(data.error || 'An error occurred', response.status);\r\n    }\r\n\r\n    return { data: data as T };\r\n  } catch (error) {\r\n    if (error instanceof ApiError) {\r\n      return { error: error.message };\r\n    }\r\n    return { error: (error as Error).message };\r\n  }\r\n}\r\n\r\n/**\r\n * API client for user-related endpoints\r\n */\r\nexport const userApi = {\r\n  /**\r\n   * Get the current logged-in user\r\n   */\r\n  getCurrentUser: async () => {\r\n    return fetchApi<{ user: any }>('/api/users?me=true');\r\n  },\r\n\r\n  /**\r\n   * Get a user by username\r\n   */\r\n  getUserByUsername: async (username: string) => {\r\n    return fetchApi<{ user: any; profile: any }>(`/api/users/${username}`);\r\n  },\r\n\r\n  /**\r\n   * Update the current user\r\n   */\r\n  updateUser: async (data: { username?: string; email?: string }) => {\r\n    return fetchApi<{ user: any }>('/api/users', {\r\n      method: 'PUT',\r\n      body: JSON.stringify(data),\r\n    });\r\n  },\r\n\r\n  /**\r\n   * List users with pagination\r\n   */\r\n  listUsers: async ({ limit = 10, offset = 0 }: PaginationParams = {}) => {\r\n    return fetchApi<{ users: any[] }>(\r\n      `/api/users?limit=${limit}&offset=${offset}`\r\n    );\r\n  },\r\n};\r\n\r\n/**\r\n * API client for profile-related endpoints\r\n */\r\nexport const profileApi = {\r\n  /**\r\n   * Get the current user's profile\r\n   */\r\n  getProfile: async () => {\r\n    return fetchApi<{ profile: any }>('/api/profile');\r\n  },\r\n\r\n  /**\r\n   * Update the current user's profile\r\n   */\r\n  updateProfile: async (data: {\r\n    display_name?: string;\r\n    bio?: string;\r\n    avatar_url?: string;\r\n    theme_preferences?: Record<string, any>;\r\n    custom_css?: string;\r\n    custom_html?: string;\r\n    social_links?: Record<string, string>;\r\n  }) => {\r\n    return fetchApi<{ profile: any }>('/api/profile', {\r\n      method: 'PUT',\r\n      body: JSON.stringify(data),\r\n    });\r\n  },\r\n};\r\n\r\n/**\r\n * API client for IPFS content-related endpoints\r\n */\r\nexport const ipfsApi = {\r\n  /**\r\n   * Get IPFS content for the current user\r\n   */\r\n  getContent: async ({ limit = 10, offset = 0 }: PaginationParams = {}) => {\r\n    return fetchApi<{ content: any[]; stats: any }>(\r\n      `/api/ipfs?limit=${limit}&offset=${offset}`\r\n    );\r\n  },\r\n\r\n  /**\r\n   * Get a specific IPFS content item by CID\r\n   */\r\n  getContentByCid: async (cid: string) => {\r\n    return fetchApi<{ content: any }>(`/api/ipfs/${cid}`);\r\n  },\r\n\r\n  /**\r\n   * Create a new IPFS content item\r\n   */\r\n  createContent: async (data: {\r\n    cid: string;\r\n    contentType?: string;\r\n    filename?: string;\r\n    size?: number;\r\n  }) => {\r\n    return fetchApi<{ content: any }>('/api/ipfs', {\r\n      method: 'POST',\r\n      body: JSON.stringify(data),\r\n    });\r\n  },\r\n\r\n  /**\r\n   * Update pin status for an IPFS content item\r\n   */\r\n  updatePinStatus: async (cid: string, pinned: boolean) => {\r\n    return fetchApi<{ content: any }>(`/api/ipfs/${cid}`, {\r\n      method: 'PATCH',\r\n      body: JSON.stringify({ pinned }),\r\n    });\r\n  },\r\n\r\n  /**\r\n   * Delete an IPFS content item\r\n   */\r\n  deleteContent: async (cid: string) => {\r\n    return fetchApi<{ success: boolean }>(`/api/ipfs/${cid}`, {\r\n      method: 'DELETE',\r\n    });\r\n  },\r\n};\r\n\r\n// Export a combined API object\r\nexport const api = {\r\n  user: userApi,\r\n  profile: profileApi,\r\n  ipfs: ipfsApi,\r\n};\r\n\r\nexport default api;\r\n"],"names":["Promise","resolve","then","__webpack_require__","bind","DashboardPage","router","useRouter","isLoading","authLoading","isAuthenticated","useAuth","content","setContent","useState","stats","setStats","total","pinned","totalSize","setIsLoading","error","setError","newCid","setNewCid","newFilename","setNewFilename","newContentType","setNewContentType","isSubmitting","setIsSubmitting","useEffect","push","fetchContent","response","api","ipfs","getContent","data","err","console","message","handleAddContent","e","preventDefault","createContent","cid","filename","undefined","contentType","handleTogglePin","currentPinned","updatePinStatus","prevContent","map","item","prevStats","Math","max","handleDelete","confirm","deleteContent","formatFileSize","bytes","i","floor","log","parseFloat","pow","toFixed","sizes","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","div","className","jsx","Navigation","style","maxWidth","margin","span","textAlign","padding","backgroundColor","border","marginBottom","display","flex","h3","table","width","tbody","tr","td","marginLeft","form","onSubmit","label","htmlFor","input","id","type","value","onChange","target","placeholder","required","button","disabled","length","p","borderCollapse","thead","th","borderBottom","a","href","concat","rel","substring","content_type","size","checked","aria-label","onClick","user","login","logout","nav","Link","Fragment","username","AuthContext","createContext","AuthProvider","param","children","session","status","useSession","setUser","profile","setProfile","fetchUserData","userResponse","profileResponse","getCurrentUser","getProfile","signIn","callbackUrl","signOut","refreshUserData","Provider","context","useContext","ApiError","Error","constructor","name","fetchApi","url","options","fetch","headers","json","ok","getUserByUsername","updateUser","method","body","JSON","stringify","listUsers","limit","offset","arguments","updateProfile","getContentByCid"],"sourceRoot":""}