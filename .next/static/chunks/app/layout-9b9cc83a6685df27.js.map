{"version":3,"file":"static/chunks/app/layout-9b9cc83a6685df27.js","mappings":"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","sources":["webpack://_N_E/?a3a7","webpack://_N_E/./src/components/Providers.tsx","webpack://_N_E/./src/contexts/AuthContext.tsx","webpack://_N_E/./src/lib/api.ts","webpack://_N_E/./src/app/globals.css","webpack://_N_E/./src/app/win98.css","webpack://_N_E/./node_modules/next/font/google/target.css","webpack://_N_E/./node_modules/next/font/google/target.css?4599","webpack://_N_E/<anon>"],"sourcesContent":["import(/* webpackMode: \"eager\" */ \"C:\\\\Users\\\\adoni\\\\Desktop\\\\projects\\\\basednet\\\\src\\\\app\\\\globals.css\");\nimport(/* webpackMode: \"eager\" */ \"C:\\\\Users\\\\adoni\\\\Desktop\\\\projects\\\\basednet\\\\src\\\\app\\\\win98.css\");\nimport(/* webpackMode: \"eager\" */ \"C:\\\\Users\\\\adoni\\\\Desktop\\\\projects\\\\basednet\\\\node_modules\\\\next\\\\font\\\\google\\\\target.css?{\\\"path\\\":\\\"src\\\\\\\\app\\\\\\\\layout.tsx\\\",\\\"import\\\":\\\"Inter\\\",\\\"arguments\\\":[{\\\"subsets\\\":[\\\"latin\\\"],\\\"display\\\":\\\"swap\\\",\\\"variable\\\":\\\"--font-inter\\\"}],\\\"variableName\\\":\\\"inter\\\"}\");\nimport(/* webpackMode: \"eager\" */ \"C:\\\\Users\\\\adoni\\\\Desktop\\\\projects\\\\basednet\\\\node_modules\\\\next\\\\font\\\\google\\\\target.css?{\\\"path\\\":\\\"src\\\\\\\\app\\\\\\\\layout.tsx\\\",\\\"import\\\":\\\"Roboto_Mono\\\",\\\"arguments\\\":[{\\\"subsets\\\":[\\\"latin\\\"],\\\"display\\\":\\\"swap\\\",\\\"variable\\\":\\\"--font-roboto-mono\\\"}],\\\"variableName\\\":\\\"robotoMono\\\"}\");\nimport(/* webpackMode: \"eager\" */ \"C:\\\\Users\\\\adoni\\\\Desktop\\\\projects\\\\basednet\\\\src\\\\components\\\\Providers.tsx\")","'use client';\r\n\r\nimport React from 'react';\r\nimport { SessionProvider } from 'next-auth/react';\r\nimport { AuthProvider } from '@/contexts/AuthContext';\r\n\r\nexport default function Providers({ children }: { children: React.ReactNode }) {\r\n  return (\r\n    <SessionProvider>\r\n      <AuthProvider>\r\n        {children}\r\n      </AuthProvider>\r\n    </SessionProvider>\r\n  );\r\n}\r\n","'use client';\r\n\r\nimport React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\nimport { useSession, signIn, signOut } from 'next-auth/react';\r\nimport { api } from '@/lib/api';\r\n\r\n// Define types for our context\r\ninterface User {\r\n  id: number;\r\n  username: string;\r\n  email?: string;\r\n  created_at: string;\r\n  updated_at: string;\r\n}\r\n\r\ninterface Profile {\r\n  id: number;\r\n  user_id: number;\r\n  display_name?: string;\r\n  bio?: string;\r\n  avatar_url?: string;\r\n  theme_preferences?: Record<string, any>;\r\n  custom_css?: string;\r\n  custom_html?: string;\r\n  social_links?: Record<string, string>;\r\n  created_at: string;\r\n  updated_at: string;\r\n}\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  profile: Profile | null;\r\n  isLoading: boolean;\r\n  isAuthenticated: boolean;\r\n  error: string | null;\r\n  login: () => Promise<void>;\r\n  logout: () => Promise<void>;\r\n  refreshUserData: () => Promise<void>;\r\n}\r\n\r\n// Create the context\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\n// Provider component\r\nexport function AuthProvider({ children }: { children: ReactNode }) {\r\n  const { data: session, status } = useSession();\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [profile, setProfile] = useState<Profile | null>(null);\r\n  const [isLoading, setIsLoading] = useState<boolean>(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  // Function to fetch user data\r\n  const fetchUserData = async () => {\r\n    if (!session?.user) {\r\n      setUser(null);\r\n      setProfile(null);\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setIsLoading(true);\r\n      setError(null);\r\n\r\n      // Fetch user data\r\n      const userResponse = await api.user.getCurrentUser();\r\n      if (userResponse.error) {\r\n        throw new Error(userResponse.error);\r\n      }\r\n      setUser(userResponse.data?.user || null);\r\n\r\n      // Fetch profile data\r\n      const profileResponse = await api.profile.getProfile();\r\n      if (profileResponse.error) {\r\n        throw new Error(profileResponse.error);\r\n      }\r\n      setProfile(profileResponse.data?.profile || null);\r\n    } catch (err) {\r\n      console.error('Error fetching user data:', err);\r\n      setError((err as Error).message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Fetch user data when session changes\r\n  useEffect(() => {\r\n    if (status === 'loading') {\r\n      return;\r\n    }\r\n    \r\n    fetchUserData();\r\n  }, [session, status]);\r\n\r\n  // Login function\r\n  const login = async () => {\r\n    try {\r\n      await signIn('indieauth', { callbackUrl: '/' });\r\n    } catch (err) {\r\n      console.error('Login error:', err);\r\n      setError((err as Error).message);\r\n    }\r\n  };\r\n\r\n  // Logout function\r\n  const logout = async () => {\r\n    try {\r\n      await signOut({ callbackUrl: '/' });\r\n      setUser(null);\r\n      setProfile(null);\r\n    } catch (err) {\r\n      console.error('Logout error:', err);\r\n      setError((err as Error).message);\r\n    }\r\n  };\r\n\r\n  // Function to manually refresh user data\r\n  const refreshUserData = async () => {\r\n    await fetchUserData();\r\n  };\r\n\r\n  // Context value\r\n  const value = {\r\n    user,\r\n    profile,\r\n    isLoading,\r\n    isAuthenticated: !!user,\r\n    error,\r\n    login,\r\n    logout,\r\n    refreshUserData,\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n}\r\n\r\n// Custom hook to use the auth context\r\nexport function useAuth() {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n}\r\n","/**\r\n * API client utility for making requests to the backend\r\n */\r\n\r\n// Define types for API responses\r\nexport interface ApiResponse<T> {\r\n  data?: T;\r\n  error?: string;\r\n}\r\n\r\n// Define types for pagination\r\nexport interface PaginationParams {\r\n  limit?: number;\r\n  offset?: number;\r\n}\r\n\r\n// Define error class for API errors\r\nexport class ApiError extends Error {\r\n  status: number;\r\n  \r\n  constructor(message: string, status: number) {\r\n    super(message);\r\n    this.status = status;\r\n    this.name = 'ApiError';\r\n  }\r\n}\r\n\r\n/**\r\n * Base fetch function with error handling\r\n */\r\nasync function fetchApi<T>(\r\n  url: string,\r\n  options: RequestInit = {}\r\n): Promise<ApiResponse<T>> {\r\n  try {\r\n    const response = await fetch(url, {\r\n      ...options,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        ...options.headers,\r\n      },\r\n    });\r\n\r\n    const data = await response.json();\r\n\r\n    if (!response.ok) {\r\n      throw new ApiError(data.error || 'An error occurred', response.status);\r\n    }\r\n\r\n    return { data: data as T };\r\n  } catch (error) {\r\n    if (error instanceof ApiError) {\r\n      return { error: error.message };\r\n    }\r\n    return { error: (error as Error).message };\r\n  }\r\n}\r\n\r\n/**\r\n * API client for user-related endpoints\r\n */\r\nexport const userApi = {\r\n  /**\r\n   * Get the current logged-in user\r\n   */\r\n  getCurrentUser: async () => {\r\n    return fetchApi<{ user: any }>('/api/users?me=true');\r\n  },\r\n\r\n  /**\r\n   * Get a user by username\r\n   */\r\n  getUserByUsername: async (username: string) => {\r\n    return fetchApi<{ user: any; profile: any }>(`/api/users/${username}`);\r\n  },\r\n\r\n  /**\r\n   * Update the current user\r\n   */\r\n  updateUser: async (data: { username?: string; email?: string }) => {\r\n    return fetchApi<{ user: any }>('/api/users', {\r\n      method: 'PUT',\r\n      body: JSON.stringify(data),\r\n    });\r\n  },\r\n\r\n  /**\r\n   * List users with pagination\r\n   */\r\n  listUsers: async ({ limit = 10, offset = 0 }: PaginationParams = {}) => {\r\n    return fetchApi<{ users: any[] }>(\r\n      `/api/users?limit=${limit}&offset=${offset}`\r\n    );\r\n  },\r\n};\r\n\r\n/**\r\n * API client for profile-related endpoints\r\n */\r\nexport const profileApi = {\r\n  /**\r\n   * Get the current user's profile\r\n   */\r\n  getProfile: async () => {\r\n    return fetchApi<{ profile: any }>('/api/profile');\r\n  },\r\n\r\n  /**\r\n   * Update the current user's profile\r\n   */\r\n  updateProfile: async (data: {\r\n    display_name?: string;\r\n    bio?: string;\r\n    avatar_url?: string;\r\n    theme_preferences?: Record<string, any>;\r\n    custom_css?: string;\r\n    custom_html?: string;\r\n    social_links?: Record<string, string>;\r\n  }) => {\r\n    return fetchApi<{ profile: any }>('/api/profile', {\r\n      method: 'PUT',\r\n      body: JSON.stringify(data),\r\n    });\r\n  },\r\n};\r\n\r\n/**\r\n * API client for IPFS content-related endpoints\r\n */\r\nexport const ipfsApi = {\r\n  /**\r\n   * Get IPFS content for the current user\r\n   */\r\n  getContent: async ({ limit = 10, offset = 0 }: PaginationParams = {}) => {\r\n    return fetchApi<{ content: any[]; stats: any }>(\r\n      `/api/ipfs?limit=${limit}&offset=${offset}`\r\n    );\r\n  },\r\n\r\n  /**\r\n   * Get a specific IPFS content item by CID\r\n   */\r\n  getContentByCid: async (cid: string) => {\r\n    return fetchApi<{ content: any }>(`/api/ipfs/${cid}`);\r\n  },\r\n\r\n  /**\r\n   * Create a new IPFS content item\r\n   */\r\n  createContent: async (data: {\r\n    cid: string;\r\n    contentType?: string;\r\n    filename?: string;\r\n    size?: number;\r\n  }) => {\r\n    return fetchApi<{ content: any }>('/api/ipfs', {\r\n      method: 'POST',\r\n      body: JSON.stringify(data),\r\n    });\r\n  },\r\n\r\n  /**\r\n   * Update pin status for an IPFS content item\r\n   */\r\n  updatePinStatus: async (cid: string, pinned: boolean) => {\r\n    return fetchApi<{ content: any }>(`/api/ipfs/${cid}`, {\r\n      method: 'PATCH',\r\n      body: JSON.stringify({ pinned }),\r\n    });\r\n  },\r\n\r\n  /**\r\n   * Delete an IPFS content item\r\n   */\r\n  deleteContent: async (cid: string) => {\r\n    return fetchApi<{ success: boolean }>(`/api/ipfs/${cid}`, {\r\n      method: 'DELETE',\r\n    });\r\n  },\r\n};\r\n\r\n// Export a combined API object\r\nexport const api = {\r\n  user: userApi,\r\n  profile: profileApi,\r\n  ipfs: ipfsApi,\r\n};\r\n\r\nexport default api;\r\n","// extracted by mini-css-extract-plugin","// extracted by mini-css-extract-plugin","// extracted by mini-css-extract-plugin\nmodule.exports = {\"style\":{\"fontFamily\":\"'__Inter_d65c78', '__Inter_Fallback_d65c78'\",\"fontStyle\":\"normal\"},\"className\":\"__className_d65c78\",\"variable\":\"__variable_d65c78\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"style\":{\"fontFamily\":\"'__Roboto_Mono_43fb55', '__Roboto_Mono_Fallback_43fb55'\",\"fontStyle\":\"normal\"},\"className\":\"__className_43fb55\",\"variable\":\"__variable_43fb55\"};"],"names":["Promise","resolve","then","__webpack_require__","t","bind","Providers","param","children","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","SessionProvider","AuthProvider","AuthContext","createContext","undefined","data","session","status","useSession","user","setUser","useState","profile","setProfile","isLoading","setIsLoading","error","setError","fetchUserData","userResponse","profileResponse","api","getCurrentUser","getProfile","err","console","message","useEffect","login","signIn","callbackUrl","logout","signOut","refreshUserData","Provider","value","isAuthenticated","useAuth","context","useContext","ApiError","Error","constructor","name","fetchApi","url","options","response","fetch","headers","json","ok","getUserByUsername","username","concat","updateUser","method","body","JSON","stringify","listUsers","limit","offset","arguments","length","updateProfile","ipfs","getContent","getContentByCid","cid","createContent","updatePinStatus","pinned","deleteContent","module","exports"],"sourceRoot":""}