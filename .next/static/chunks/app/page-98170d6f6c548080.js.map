{"version":3,"file":"static/chunks/app/page-98170d6f6c548080.js","mappings":"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","sources":["webpack://_N_E/?cac4","webpack://_N_E/./src/app/page.tsx","webpack://_N_E/./src/components/Navigation.tsx","webpack://_N_E/./src/contexts/AuthContext.tsx","webpack://_N_E/./src/lib/api.ts","webpack://_N_E/<anon>"],"sourcesContent":["import(/* webpackMode: \"eager\" */ \"C:\\\\Users\\\\adoni\\\\Desktop\\\\projects\\\\basednet\\\\src\\\\app\\\\page.tsx\")","'use client';\n\nimport React, { useEffect, useState } from 'react';\nimport Navigation from '@/components/Navigation';\nimport { useAuth } from '@/contexts/AuthContext';\nimport { api } from '@/lib/api';\n\ninterface Stats {\n  totalSites: number;\n  activeToday: number;\n  webrings: number;\n  ipfsNodes: number;\n}\n\nexport default function Home() {\n  const { isAuthenticated, user, profile } = useAuth();\n  const [stats, setStats] = useState<Stats>({\n    totalSites: 88888,\n    activeToday: 1337,\n    webrings: 42,\n    ipfsNodes: 404\n  });\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Example of fetching data from the API\n  useEffect(() => {\n    if (isAuthenticated) {\n      setIsLoading(true);\n      // This is just a placeholder - in a real app, you'd fetch actual stats\n      api.ipfs.getContent()\n        .then(response => {\n          if (response.data?.stats) {\n            console.log('IPFS stats:', response.data.stats);\n            // Update stats with real data if available\n          }\n        })\n        .catch(error => {\n          console.error('Error fetching IPFS stats:', error);\n        })\n        .finally(() => {\n          setIsLoading(false);\n        });\n    }\n  }, [isAuthenticated]);\n\n  return (\n    <div className=\"win98-desktop\">\n      {/* Navigation Bar */}\n      <Navigation />\n\n      {/* ASCII Art Logo */}\n      <div className=\"window\" style={{ maxWidth: '600px', margin: '20px auto' }}>\n        <div className=\"window-title\">\n          <span>BASEDNET.EXE</span>\n          <span>×</span>\n        </div>\n        <div className=\"window-content\">\n          <pre className=\"ascii-art retrowave-glow\">\n{`\n ▄▄▄▄    ▄▄▄        ██████ ▓█████ ▓█████▄  ███▄    █ ▓█████▄▄▄█████▓\n▓█████▄ ▒████▄    ▒██    ▒ ▓█   ▀ ▒██▀ ██▌ ██ ▀█   █ ▓█   ▀▓  ██▒ ▓▒\n▒██▒ ▄██▒██  ▀█▄  ░ ▓██▄   ▒███   ░██   █▌▓██  ▀█ ██▒▒███  ▒ ▓██░ ▒░\n▒██░█▀  ░██▄▄▄▄██   ▒   ██▒▒▓█  ▄ ░▓█▄   ▌▓██▒  ▐▌██▒▒▓█  ▄░ ▓██▓ ░ \n░▓█  ▀█▓ ▓█   ▓██▒▒██████▒▒░▒████▒░▒████▓ ▒██░   ▓██░░▒████▒ ▒██▒ ░ \n░▒▓███▀▒ ▒▒   ▓▒█░▒ ▒▓▒ ▒ ░░░ ▒░ ░ ▒▒▓  ▒ ░ ▒░   ▒ ▒ ░░ ▒░ ░ ▒ ░░   \n▒░▒   ░   ▒   ▒▒ ░░ ░▒  ░ ░ ░ ░  ░ ░ ▒  ▒ ░ ░░   ░ ▒░ ░ ░  ░   ░    \n ░    ░   ░   ▒   ░  ░  ░     ░    ░ ░  ░    ░   ░ ░    ░    ░      \n ░            ░  ░      ░     ░  ░   ░             ░    ░  ░         \n      ░                            ░                                   \n`}\n          </pre>\n          <p style={{ textAlign: 'center' }}>Web 1.0 Lives Forever</p>\n          \n          {isAuthenticated && (\n            <div style={{ textAlign: 'center', marginTop: '10px' }}>\n              <p>Welcome back, {profile?.display_name || user?.username}!</p>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Main Content Grid */}\n      <div className=\"grid-98\">\n        {/* Active Sites Window */}\n        <div className=\"window\">\n          <div className=\"window-title\">\n            <span>Active Sites</span>\n            <span>×</span>\n          </div>\n          <div className=\"window-content\">\n            <table>\n              <thead>\n                <tr>\n                  <th>Site</th>\n                  <th>Last Updated</th>\n                  <th>Views</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td><a href=\"#\">cool-site-88</a></td>\n                  <td>2 hours ago</td>\n                  <td>1,337</td>\n                </tr>\n                <tr>\n                  <td><a href=\"#\">retro-haven</a></td>\n                  <td>5 hours ago</td>\n                  <td>420</td>\n                </tr>\n                <tr>\n                  <td><a href=\"#\">pixel-dreams</a></td>\n                  <td>8 hours ago</td>\n                  <td>808</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n\n        {/* File Manager */}\n        <div className=\"window\">\n          <div className=\"window-title\">\n            <span>Site Manager</span>\n            <span>×</span>\n          </div>\n          <div className=\"window-content\">\n            <div style={{ marginBottom: '10px' }}>\n              <button className=\"btn-98\" disabled={!isAuthenticated}>Upload Files</button>\n              <button className=\"btn-98\" disabled={!isAuthenticated}>New Folder</button>\n              <button className=\"btn-98\" disabled={!isAuthenticated}>Edit HTML</button>\n            </div>\n            {isAuthenticated ? (\n              <table>\n                <thead>\n                  <tr>\n                    <th>Name</th>\n                    <th>Size</th>\n                    <th>Type</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td>📁 images</td>\n                    <td>--</td>\n                    <td>Folder</td>\n                  </tr>\n                  <tr>\n                    <td>📄 index.html</td>\n                    <td>2.4 KB</td>\n                    <td>HTML</td>\n                  </tr>\n                  <tr>\n                    <td>📄 style.css</td>\n                    <td>1.8 KB</td>\n                    <td>CSS</td>\n                  </tr>\n                </tbody>\n              </table>\n            ) : (\n              <div style={{ padding: '10px', textAlign: 'center' }}>\n                <p>Please log in to manage your site files.</p>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Webring Navigator */}\n        <div className=\"window\">\n          <div className=\"window-title\">\n            <span>Webring Navigator</span>\n            <span>×</span>\n          </div>\n          <div className=\"window-content\">\n            <div style={{ marginBottom: '10px' }}>\n              <button className=\"btn-98\">← Previous</button>\n              <button className=\"btn-98\">Random</button>\n              <button className=\"btn-98\">Next →</button>\n            </div>\n            <div className=\"ascii-art\" style={{ fontSize: '10px' }}>\n{`    [Your Site]\n        ↓\n  [Previous] → [Random] → [Next]\n        ↑\n    [Return]`}\n            </div>\n          </div>\n        </div>\n\n        {/* Stats Window */}\n        <div className=\"window\">\n          <div className=\"window-title\">\n            <span>Network Stats</span>\n            <span>×</span>\n          </div>\n          <div className=\"window-content\">\n            {isLoading ? (\n              <div className=\"loading-98\" style={{ margin: '20px auto' }}></div>\n            ) : (\n              <table>\n                <tbody>\n                  <tr>\n                    <td>Total Sites:</td>\n                    <td>{stats.totalSites.toLocaleString()}</td>\n                  </tr>\n                  <tr>\n                    <td>Active Today:</td>\n                    <td>{stats.activeToday.toLocaleString()}</td>\n                  </tr>\n                  <tr>\n                    <td>Webrings:</td>\n                    <td>{stats.webrings.toLocaleString()}</td>\n                  </tr>\n                  <tr>\n                    <td>IPFS Nodes:</td>\n                    <td>{stats.ipfsNodes.toLocaleString()}</td>\n                  </tr>\n                </tbody>\n              </table>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* Status Bar */}\n      <div className=\"status-bar-98\">\n        <div>Connected to IPFS Network</div>\n        <div>\n          <span className=\"loading-98\" style={{ marginRight: '8px' }}></span>\n          Syncing with {stats.ipfsNodes} peers\n        </div>\n      </div>\n    </div>\n  )\n}\n","'use client';\r\n\r\nimport React from 'react';\r\nimport Link from 'next/link';\r\nimport { useAuth } from '@/contexts/AuthContext';\r\n\r\nexport default function Navigation() {\r\n  const { user, isAuthenticated, isLoading, login, logout } = useAuth();\r\n\r\n  return (\r\n    <nav className=\"navbar-98\">\r\n      <button className=\"btn-98\">Start</button>\r\n      <div style={{ marginLeft: '10px' }}>|</div>\r\n      <Link href=\"/\" className=\"btn-98\">Home</Link>\r\n      <Link href=\"/browse\" className=\"btn-98\">Browse</Link>\r\n      <Link href=\"/webrings\" className=\"btn-98\">Webrings</Link>\r\n      \r\n      {isLoading ? (\r\n        <div className=\"loading-98\" style={{ marginLeft: 'auto' }}></div>\r\n      ) : isAuthenticated ? (\r\n        <>\r\n          <Link href=\"/dashboard\" className=\"btn-98\">My Dashboard</Link>\r\n          <Link href=\"/profile\" className=\"btn-98\">Profile</Link>\r\n          <button \r\n            className=\"btn-98\" \r\n            style={{ marginLeft: 'auto' }}\r\n            onClick={() => logout()}\r\n          >\r\n            Logout ({user?.username})\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <button \r\n          className=\"btn-98\" \r\n          style={{ marginLeft: 'auto' }}\r\n          onClick={() => login()}\r\n        >\r\n          Login\r\n        </button>\r\n      )}\r\n      \r\n      <Link href=\"/help\" className=\"btn-98\">Help</Link>\r\n    </nav>\r\n  );\r\n}\r\n","'use client';\r\n\r\nimport React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\nimport { useSession, signIn, signOut } from 'next-auth/react';\r\nimport { api } from '@/lib/api';\r\n\r\n// Define types for our context\r\ninterface User {\r\n  id: number;\r\n  username: string;\r\n  email?: string;\r\n  created_at: string;\r\n  updated_at: string;\r\n}\r\n\r\ninterface Profile {\r\n  id: number;\r\n  user_id: number;\r\n  display_name?: string;\r\n  bio?: string;\r\n  avatar_url?: string;\r\n  theme_preferences?: Record<string, any>;\r\n  custom_css?: string;\r\n  custom_html?: string;\r\n  social_links?: Record<string, string>;\r\n  created_at: string;\r\n  updated_at: string;\r\n}\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  profile: Profile | null;\r\n  isLoading: boolean;\r\n  isAuthenticated: boolean;\r\n  error: string | null;\r\n  login: () => Promise<void>;\r\n  logout: () => Promise<void>;\r\n  refreshUserData: () => Promise<void>;\r\n}\r\n\r\n// Create the context\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\n// Provider component\r\nexport function AuthProvider({ children }: { children: ReactNode }) {\r\n  const { data: session, status } = useSession();\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [profile, setProfile] = useState<Profile | null>(null);\r\n  const [isLoading, setIsLoading] = useState<boolean>(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  // Function to fetch user data\r\n  const fetchUserData = async () => {\r\n    if (!session?.user) {\r\n      setUser(null);\r\n      setProfile(null);\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setIsLoading(true);\r\n      setError(null);\r\n\r\n      // Fetch user data\r\n      const userResponse = await api.user.getCurrentUser();\r\n      if (userResponse.error) {\r\n        throw new Error(userResponse.error);\r\n      }\r\n      setUser(userResponse.data?.user || null);\r\n\r\n      // Fetch profile data\r\n      const profileResponse = await api.profile.getProfile();\r\n      if (profileResponse.error) {\r\n        throw new Error(profileResponse.error);\r\n      }\r\n      setProfile(profileResponse.data?.profile || null);\r\n    } catch (err) {\r\n      console.error('Error fetching user data:', err);\r\n      setError((err as Error).message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Fetch user data when session changes\r\n  useEffect(() => {\r\n    if (status === 'loading') {\r\n      return;\r\n    }\r\n    \r\n    fetchUserData();\r\n  }, [session, status]);\r\n\r\n  // Login function\r\n  const login = async () => {\r\n    try {\r\n      await signIn('indieauth', { callbackUrl: '/' });\r\n    } catch (err) {\r\n      console.error('Login error:', err);\r\n      setError((err as Error).message);\r\n    }\r\n  };\r\n\r\n  // Logout function\r\n  const logout = async () => {\r\n    try {\r\n      await signOut({ callbackUrl: '/' });\r\n      setUser(null);\r\n      setProfile(null);\r\n    } catch (err) {\r\n      console.error('Logout error:', err);\r\n      setError((err as Error).message);\r\n    }\r\n  };\r\n\r\n  // Function to manually refresh user data\r\n  const refreshUserData = async () => {\r\n    await fetchUserData();\r\n  };\r\n\r\n  // Context value\r\n  const value = {\r\n    user,\r\n    profile,\r\n    isLoading,\r\n    isAuthenticated: !!user,\r\n    error,\r\n    login,\r\n    logout,\r\n    refreshUserData,\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n}\r\n\r\n// Custom hook to use the auth context\r\nexport function useAuth() {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n}\r\n","/**\r\n * API client utility for making requests to the backend\r\n */\r\n\r\n// Define types for API responses\r\nexport interface ApiResponse<T> {\r\n  data?: T;\r\n  error?: string;\r\n}\r\n\r\n// Define types for pagination\r\nexport interface PaginationParams {\r\n  limit?: number;\r\n  offset?: number;\r\n}\r\n\r\n// Define error class for API errors\r\nexport class ApiError extends Error {\r\n  status: number;\r\n  \r\n  constructor(message: string, status: number) {\r\n    super(message);\r\n    this.status = status;\r\n    this.name = 'ApiError';\r\n  }\r\n}\r\n\r\n/**\r\n * Base fetch function with error handling\r\n */\r\nasync function fetchApi<T>(\r\n  url: string,\r\n  options: RequestInit = {}\r\n): Promise<ApiResponse<T>> {\r\n  try {\r\n    const response = await fetch(url, {\r\n      ...options,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        ...options.headers,\r\n      },\r\n    });\r\n\r\n    const data = await response.json();\r\n\r\n    if (!response.ok) {\r\n      throw new ApiError(data.error || 'An error occurred', response.status);\r\n    }\r\n\r\n    return { data: data as T };\r\n  } catch (error) {\r\n    if (error instanceof ApiError) {\r\n      return { error: error.message };\r\n    }\r\n    return { error: (error as Error).message };\r\n  }\r\n}\r\n\r\n/**\r\n * API client for user-related endpoints\r\n */\r\nexport const userApi = {\r\n  /**\r\n   * Get the current logged-in user\r\n   */\r\n  getCurrentUser: async () => {\r\n    return fetchApi<{ user: any }>('/api/users?me=true');\r\n  },\r\n\r\n  /**\r\n   * Get a user by username\r\n   */\r\n  getUserByUsername: async (username: string) => {\r\n    return fetchApi<{ user: any; profile: any }>(`/api/users/${username}`);\r\n  },\r\n\r\n  /**\r\n   * Update the current user\r\n   */\r\n  updateUser: async (data: { username?: string; email?: string }) => {\r\n    return fetchApi<{ user: any }>('/api/users', {\r\n      method: 'PUT',\r\n      body: JSON.stringify(data),\r\n    });\r\n  },\r\n\r\n  /**\r\n   * List users with pagination\r\n   */\r\n  listUsers: async ({ limit = 10, offset = 0 }: PaginationParams = {}) => {\r\n    return fetchApi<{ users: any[] }>(\r\n      `/api/users?limit=${limit}&offset=${offset}`\r\n    );\r\n  },\r\n};\r\n\r\n/**\r\n * API client for profile-related endpoints\r\n */\r\nexport const profileApi = {\r\n  /**\r\n   * Get the current user's profile\r\n   */\r\n  getProfile: async () => {\r\n    return fetchApi<{ profile: any }>('/api/profile');\r\n  },\r\n\r\n  /**\r\n   * Update the current user's profile\r\n   */\r\n  updateProfile: async (data: {\r\n    display_name?: string;\r\n    bio?: string;\r\n    avatar_url?: string;\r\n    theme_preferences?: Record<string, any>;\r\n    custom_css?: string;\r\n    custom_html?: string;\r\n    social_links?: Record<string, string>;\r\n  }) => {\r\n    return fetchApi<{ profile: any }>('/api/profile', {\r\n      method: 'PUT',\r\n      body: JSON.stringify(data),\r\n    });\r\n  },\r\n};\r\n\r\n/**\r\n * API client for IPFS content-related endpoints\r\n */\r\nexport const ipfsApi = {\r\n  /**\r\n   * Get IPFS content for the current user\r\n   */\r\n  getContent: async ({ limit = 10, offset = 0 }: PaginationParams = {}) => {\r\n    return fetchApi<{ content: any[]; stats: any }>(\r\n      `/api/ipfs?limit=${limit}&offset=${offset}`\r\n    );\r\n  },\r\n\r\n  /**\r\n   * Get a specific IPFS content item by CID\r\n   */\r\n  getContentByCid: async (cid: string) => {\r\n    return fetchApi<{ content: any }>(`/api/ipfs/${cid}`);\r\n  },\r\n\r\n  /**\r\n   * Create a new IPFS content item\r\n   */\r\n  createContent: async (data: {\r\n    cid: string;\r\n    contentType?: string;\r\n    filename?: string;\r\n    size?: number;\r\n  }) => {\r\n    return fetchApi<{ content: any }>('/api/ipfs', {\r\n      method: 'POST',\r\n      body: JSON.stringify(data),\r\n    });\r\n  },\r\n\r\n  /**\r\n   * Update pin status for an IPFS content item\r\n   */\r\n  updatePinStatus: async (cid: string, pinned: boolean) => {\r\n    return fetchApi<{ content: any }>(`/api/ipfs/${cid}`, {\r\n      method: 'PATCH',\r\n      body: JSON.stringify({ pinned }),\r\n    });\r\n  },\r\n\r\n  /**\r\n   * Delete an IPFS content item\r\n   */\r\n  deleteContent: async (cid: string) => {\r\n    return fetchApi<{ success: boolean }>(`/api/ipfs/${cid}`, {\r\n      method: 'DELETE',\r\n    });\r\n  },\r\n};\r\n\r\n// Export a combined API object\r\nexport const api = {\r\n  user: userApi,\r\n  profile: profileApi,\r\n  ipfs: ipfsApi,\r\n};\r\n\r\nexport default api;\r\n"],"names":["Promise","resolve","then","__webpack_require__","bind","Home","isAuthenticated","user","profile","useAuth","stats","setStats","useState","totalSites","activeToday","webrings","ipfsNodes","isLoading","setIsLoading","useEffect","api","ipfs","getContent","response","data","console","log","catch","error","finally","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","div","className","jsx","Navigation","style","maxWidth","margin","span","pre","p","textAlign","marginTop","display_name","username","table","thead","tr","th","tbody","td","a","href","marginBottom","button","disabled","padding","fontSize","toLocaleString","marginRight","login","logout","nav","marginLeft","Link","Fragment","onClick","AuthContext","createContext","undefined","AuthProvider","param","children","session","status","useSession","setUser","setProfile","setError","fetchUserData","userResponse","profileResponse","getCurrentUser","getProfile","err","message","signIn","callbackUrl","signOut","refreshUserData","Provider","value","context","useContext","ApiError","Error","constructor","name","fetchApi","url","options","fetch","headers","json","ok","getUserByUsername","concat","updateUser","method","body","JSON","stringify","listUsers","limit","offset","arguments","length","updateProfile","getContentByCid","cid","createContent","updatePinStatus","pinned","deleteContent"],"sourceRoot":""}